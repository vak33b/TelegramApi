import os
from datetime import datetime, timedelta
from pyrogram import Client
from app.config import SESSION_NAME, API_ID, API_HASH, ALLOWED_EXTENSIONS
from app.search_utils import is_valid_file

client = Client(SESSION_NAME, API_ID, API_HASH)

async def search_and_download(
    keywords: list[str],
    channel: str,
    days_limit: int = 15,
    limit: int = 100
):
    results = []
    BASE_DIR = os.path.dirname(os.path.abspath(__file__))
    DOWNLOAD_DIR = os.path.join(BASE_DIR, "..", "downloads")
    os.makedirs(DOWNLOAD_DIR, exist_ok=True)

    date_threshold = datetime.utcnow() - timedelta(days=days_limit)

    print(f"\nüì° –ü–æ–∏—Å–∫ –≤ –∫–∞–Ω–∞–ª–µ: {channel}")
    print(f"üîé –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {keywords}")
    print(f"üìÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –¥–∞—Ç–µ: –ø–æ—Å–ª–µ–¥–Ω–∏–µ {days_limit} –¥–Ω–µ–π (c {date_threshold.isoformat()})")

    async with client:
        async for msg in client.search_messages(channel, limit=limit):
            print("\nüì® –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:")
            print(f"  üìÖ –î–∞—Ç–∞: {msg.date}")

            if msg.date < date_threshold:
                print("  ‚è≥ –ü—Ä–æ–ø—É—â–µ–Ω–æ: —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
                continue

            if not msg.document:
                print("  ‚úâÔ∏è –ü—Ä–æ–ø—É—â–µ–Ω–æ: –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–æ–∫—É–º–µ–Ω—Ç")
                continue

            original_name = msg.document.file_name or "file.bin"
            ext = os.path.splitext(original_name)[-1]
            print(f"  üìÑ –î–æ–∫—É–º–µ–Ω—Ç: {original_name} (—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ: {ext})")

            if not is_valid_file(original_name, ALLOWED_EXTENSIONS):
                print("  ‚õî –ü—Ä–æ–ø—É—â–µ–Ω–æ: –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–µ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ")
                continue

            text = (msg.caption or msg.text or "").lower()
            print(f"  üìù –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: {text[:100]}...")

            if not any(k.lower() in text for k in keywords):
                print("  ‚ùå –ü—Ä–æ–ø—É—â–µ–Ω–æ: –Ω–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º")
                continue

            safe_name = f"{msg.id}{ext}"
            path = os.path.join(DOWNLOAD_DIR, safe_name)
            print("downloading...")
            saved = await msg.download(file_name=path)

            if saved:
                print(f"  ‚úÖ –°–∫–∞—á–∞–Ω–æ: {saved}")
                results.append({
                    "file_name": safe_name,
                    "original_name": original_name,
                    "text": text,
                    "file_size": msg.document.file_size,
                    "date": str(msg.date),
                    "path": path,
                    "download_url": f"/download/{safe_name}"
                })
            else:
                print(f"  ‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞: {original_name}")

    print(f"\nüì¶ –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –∏ —Å–∫–∞—á–∞–Ω–æ: {len(results)}\n")
    return results




async def manual_download(channel: str, msg_id: int):
    """
    –°–∫–∞—á–∏–≤–∞–µ—Ç –æ–¥–∏–Ω –¥–æ–∫—É–º–µ–Ω—Ç –∏–∑ –∫–∞–Ω–∞–ª–∞ –ø–æ ID —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    BASE_DIR = os.path.dirname(os.path.abspath(__file__))
    DOWNLOAD_DIR = os.path.join(BASE_DIR, "..", "downloads")
    os.makedirs(DOWNLOAD_DIR, exist_ok=True)
    async with client:
        msg = await client.get_messages(chat_id=channel, message_ids=msg_id)

        if msg and msg.document:
            file_name = msg.document.file_name or f"{msg.id}.bin"
            path = os.path.join(DOWNLOAD_DIR, file_name)
            result = await msg.download(file_name=path)
            print(f"‚úÖ –°–∫–∞—á–∞–Ω–æ: {result}")
            return {"status": "ok", "file": file_name, "path": path}
        else:
            print("‚ùå –í —Å–æ–æ–±—â–µ–Ω–∏–∏ –Ω–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞")
            return {"status": "error", "message": "No document in message"}